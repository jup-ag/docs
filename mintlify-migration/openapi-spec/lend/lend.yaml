openapi: 3.0.3
info:
  title: Quickstart
  version: 1.0.0

servers:
  - url: https://lite-api.jup.ag/lend/v1
    description: Free tier API endpoint with rate limits
  - url: https://api.jup.ag/lend/v1
    description: Paid tier API endpoint with higher rate limits to be used with an API Key

paths:
  /earn/deposit:
    post:
      summary: deposit
      description: |
        Request for a base64-encoded unsigned earn deposit transaction to deposit assets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarnAmountRequestBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'

  /earn/deposit-instructions:
    post:
      summary: deposit-instructions
      description: |
        Request for the instruction of an earn deposit transaction to deposit assets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarnAmountRequestBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstructionResponse'

  /earn/withdraw:
    post:
      summary: withdraw
      description: |
        Request for a base64-encoded unsigned earn withdraw transaction to withdraw assets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarnAmountRequestBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'

  /earn/withdraw-instructions:
    post:
      summary: withdraw-instructions
      description: |
        Request for the instruction of an earn withdraw transaction to withdraw assets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarnAmountRequestBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstructionResponse'

  /earn/mint:
    post:
      summary: mint
      description: |
        Request for a base64-encoded unsigned earn mint transaction to mint shares
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarnSharesRequestBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'

  /earn/mint-instructions:
    post:
      summary: mint-instructions
      description: |
        Request for the instruction of an earn mint transaction to mint shares
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarnSharesRequestBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstructionResponse'

  /earn/redeem:
    post:
      summary: redeem
      description: |
        Request for a base64-encoded unsigned earn redeem transaction to redeem shares
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarnSharesRequestBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'

  /earn/redeem-instructions:
    post:
      summary: redeem-instructions
      description: |
        Request for the instruction of an earn redeem transaction to redeem shares
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarnSharesRequestBody'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstructionResponse'

  /earn/tokens:
    get:
      summary: tokens
      description: |
        Request for the tokens available to be deposited and their information
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokensResponse'

  /earn/positions:
    get:
      summary: positions
      description: |
        Request for the position data of one or multiple users
      parameters:
        - name: users
          in: query
          description: |
            User wallet addresses (comma separated)
          required: true
          schema:
            type: string
          example: "HYbxGkNvEwvZ14RzJHPB9h3dWfXjxwAEhkyzJRHx1hBf,jdocuPgEAjMfihABsPgKEvYtsmMzjUHeq9LX4Hvs7f3"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPositionsResponse'

  /earn/earnings:
    get:
      summary: earnings
      description: |
        Request for the earnings of one or multiple positions of a user
      parameters:
        - name: user
          in: query
          description: |
            User wallet address
          required: true
          schema:
            type: string
          example: "HYbxGkNvEwvZ14RzJHPB9h3dWfXjxwAEhkyzJRHx1hBf"
        - name: positions
          in: query
          description: |
            User token positions (comma-separated)
          required: true
          schema:
            type: string
          example: "9BEcn9aPEmhSPbPQeFGjidRiEKki46fVQDyPpSQXPA2D,2uQsyo1fXXQkDtcpXnLofWy88PxcvnfH2L8FPSE62FVU"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEarningsResponse'


components:
  schemas:
    EarnAmountRequestBody:
      type: object
      required:
        - asset
        - signer
        - amount
      properties:
        asset:
          type: string
        signer:
          type: string
        amount:
          type: string
      example:
        asset: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
        signer: "HYbxGkNvEwvZ14RzJHPB9h3dWfXjxwAEhkyzJRHx1hBf"
        amount: "1000000"

    EarnSharesRequestBody:
      type: object
      required:
        - asset
        - signer
        - shares
      properties:
        asset:
          type: string
        signer:
          type: string
        shares:
          type: string
      example:
        asset: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
        signer: "HYbxGkNvEwvZ14RzJHPB9h3dWfXjxwAEhkyzJRHx1hBf"
        shares: "1000000"

    TransactionResponse:
      type: object
      required:
        - transaction
      properties:
        transaction:
          type: string

    InstructionResponse:
      type: object
      required:
        - programId
        - accounts
        - data
      properties:
        programId:
          type: string
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountMeta'
        data:
          type: string

    AccountMeta:
      type: object
      required:
        - pubkey
        - isSigner
        - isWritable
      properties:
        pubkey:
          type: string
        isSigner:
          type: boolean
        isWritable:
          type: boolean

    TokensResponse:
      type: array
      items:
        $ref: '#/components/schemas/TokenInfo'

    UserPositionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserPosition'

    UserEarningsResponse:
      type: object
      required:
        - address
        - ownerAddress
        - totalDeposits
        - totalWithdraws
        - totalBalance
        - totalAssets
        - earnings
      properties:
        address:
          type: string
        ownerAddress:
          type: string
        totalDeposits:
          type: string
        totalWithdraws:
          type: string
        totalBalance:
          type: string
        totalAssets:
          type: string
        earnings:
          type: string

    UserPosition:
      type: object
      required:
        - token
        - ownerAddress
        - shares
        - underlyingAssets
        - underlyingBalance
        - allowance
      properties:
        token:
          $ref: '#/components/schemas/TokenInfo'
        ownerAddress:
          type: string
          description: |
            - Address of user's wallet
        shares:
          type: string
          description: |
            - Balance of user's jlTokens
        underlyingAssets:
          type: string
          description: |
            - Balance of user's USDC in protocol (including intereste accured)
        underlyingBalance:
          type: string
          description: |
            - Balance of user's USDC in wallet
        allowance:
          type: string

    TokenInfo:
      type: object
      required:
        - id
        - address
        - name
        - symbol
        - decimals
        - assetAddress
        - asset
        - totalAssets
        - totalSupply
        - convertToShares
        - convertToAssets
        - rewardsRate
        - supplyRate
        - totalRate
        - rebalanceDifference
        - liquiditySupplyData
      properties:
        id:
          type: integer
          description: |
            - Lending ID, starts from `1`
        address:
          type: string
          description: |
            - Lending token address like `9BEcn9aPEmhSPbPQeFGjidRiEKki46fVQDyPpSQXPA2D`
        name:
          type: string
          description: |
            - Lending token name like Jupiter Lend USDC
        symbol:
          type: string
          description: |
            - Lending token symbol like jlUSDC
        decimals:
          type: integer
        assetAddress:
          type: string
          description: |
            - Lending token underlying asset address like `EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v`
        asset:
          $ref: '#/components/schemas/AssetInfo'
        totalAssets:
          type: string
          description: |
            - Total available underlying mint from jlTokens (with accured interest)
        totalSupply:
          type: string
          description: |
            - Total supply of jlTokens for this mint
        convertToShares:
          type: string
          description: |
            - Value of one 1 underlying token to jlToken, like 1 USDC = X jlUSDC
            - Used for conversion
        convertToAssets:
          type: string
          description: |
            - Value of one 1 jlToken token to underlying mint, like 1 jlUSDC = X USDC
            - Used for conversion
        rewardsRate:
          type: string
          description: |
            - Rewards rate , in 1e4 decimals
        supplyRate:
          type: string
          description: |
            - Supply rate, in 1e4 decimals
        totalRate:
          type: string
          description: |
            - Total sum of rewards + supply rate
        rebalanceDifference:
          type: string
        liquiditySupplyData:
          $ref: '#/components/schemas/LiquiditySupplyData'

    AssetInfo:
      type: object
      required:
        - address
        - chain_id
        - name
        - symbol
        - decimals
        - logo_url
        - price
        - coingecko_id
      properties:
        address:
          type: string
          description: |
            - Lending token underlying asset address like `EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v`
        chain_id:
          type: string
          description: |
            - Lending token underlying asset chain id like `solana`
        name:
          type: string
        symbol:
          type: string
        decimals:
          type: integer
        logo_url:
          type: string
          format: uri
        price:
          type: string
        coingecko_id:
          type: string

    LiquiditySupplyData:
      type: object
      required:
        - modeWithInterest
        - supply
        - withdrawalLimit
        - lastUpdateTimestamp
        - expandPercent
        - expandDuration
        - baseWithdrawalLimit
        - withdrawableUntilLimit
        - withdrawable
      properties:
        modeWithInterest:
          type: boolean
          description: |
            - The underlying asset is earning interest at liquidity layer
        supply:
          type: string
          description: |
            - Total supply of underlying asset on liquidity layer
            - In decimals, like 3168044480191 / 1e6 for USDC
        withdrawalLimit:
          type: string
          description: |
            - Available withdrawal limit for this asset
        lastUpdateTimestamp:
          type: string
          description: |
            - When was the reserve last updated
        expandPercent:
          type: string
        expandDuration:
          type: string
        baseWithdrawalLimit:
          type: string
        withdrawableUntilLimit:
          type: string
        withdrawable:
          type: string
          description: |
            - Total amount withdrawable at this current point, it expands every second.
